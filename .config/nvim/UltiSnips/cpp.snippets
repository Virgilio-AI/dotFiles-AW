# resizestr - to resize a c string
# random - to input the random function
# copenFile - to open a file in c style format



# sk_ncurses - skeleton for ncurses
# ndoc - basic documentation for ncurses
snippet copenFile
// r reading,w write, a append
// r+ open for reading and writing
// w+ open for both reading and writing
// a+ open for both appending and reading
// append b for binary mode
ptr = fopen("${1:path}","${2:mode}");
endsnippet

snippet random
// float num = rand()%maxNUm;
srand(time(NULL));
endsnippet

snippet resizestr
${1:nombre} = realloc(p_nombre,30*sizeof(char));
endsnippet

snippet info
// Fecha: `date +%d/%B/%Y\ -\ %A`
// Autor: Virgilio Murillo Ochoa
// personal github: Virgilio-AI
// linkedin: https://www.linkedin.com/in/virgilio-murillo-ochoa-b29b59203
// contact: virgiliomurilloochoa1@gmail.com
endsnippet
snippet sk
// Fecha: `date +%d/%B/%Y\ -\ %A`
// Autor: Virgilio Murillo Ochoa
// personal github: Virgilio-AI
// linkedin: https://www.linkedin.com/in/virgilio-murillo-ochoa-b29b59203
// contact: virgiliomurilloochoa1@gmail.com
#include<bits/stdc++.h>

using namespace std;
int main()
{
	$1
	return 0;
}
endsnippet

snippet sk_ncurses
// Fecha: `date +%d/%B/%Y\ -\ %A`
// Autor: Virgilio Murillo Ochoa
// github personal: Virgilio-AI
#include<bits/stdc++.h>
#include<ncurses.h>
using namespace std;
int main()
{
	initscr();

	${1:raw();// for line buffering disabled}
	${2:noecho(); //so that what we write doesn't gets seen}
	$3
	endwin();
	return 0;
}
endsnippet
snippet ndoc
// getch(); so you get a character
// printw(); print in screen
// refresh(); to refresh screen
endsnippet
